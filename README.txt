
CDE v0.9.9

Purpose:
	Test CDE backend by matching local program output with output
	generated by the server.  

Getting Started:
	1. Edit the config.json file to match your local environment
	2. Upload the run folder to public container in cumulus.cs.ucdavis.edu
	3. All you need to do next is run driver.rb to test the CDE backend

Required Main Config JSON Format:

	{
		"container" : "ID of a public CDE container", 
		"run" : {
			"language" : {
				"compile" : "compiler option e.g. gcc",
				"execute" : "Prefix for executing program e.g. ruby"
			}
		},
		"options" : {
			"verbose" : "Prints messages of the scaffold module",
			"verbose+" : "Prints messages of the testing modules"
		}
	}

Test Case Config JSON Format
	
	{
		"description" : "Describe what's being tested",
		"main" : "Main file e.g. Makefile",
		"test" : "Executable to test against",
		"language" : "Language the test is in e.g. c++",
		"inputs" : "Array of input files e.g. ['stdin']",
		"args" : "Array of args e.g. ['1 2 3', '4']"
	}

~ Examples can be found in run/test_cases/[language]/[test]

Extendibility:
	1. Add test cases to the different suites
	2. Add a config.json detailing how the test should be run
	3. Execute driver.rb to test your test case
